/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";
import { BigNumberish } from "ethers/utils";

import { TransactionOverrides } from ".";
import { Split } from "./Split";

export class SplitFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _party: string,
    _counterParty: string,
    _ratio: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<Split> {
    return super.deploy(_party, _counterParty, _ratio, overrides) as Promise<
      Split
    >;
  }
  getDeployTransaction(
    _party: string,
    _counterParty: string,
    _ratio: BigNumberish,
    overrides?: TransactionOverrides
  ): UnsignedTransaction {
    return super.getDeployTransaction(_party, _counterParty, _ratio, overrides);
  }
  attach(address: string): Split {
    return super.attach(address) as Split;
  }
  connect(signer: Signer): SplitFactory {
    return super.connect(signer) as SplitFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Split {
    return new Contract(address, _abi, signerOrProvider) as Split;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_party",
        type: "address"
      },
      {
        internalType: "address",
        name: "_counterParty",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_ratio",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "calculate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_counterParty",
        type: "address"
      }
    ],
    name: "setCounterParty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_party",
        type: "address"
      }
    ],
    name: "setParty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ratio",
        type: "uint256"
      }
    ],
    name: "setRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "split",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a47380380610a478339818101604052606081101561003357600080fd5b5080516020820151604092830151600080546001600160a01b031916331780825594519394929391926001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600455600280546001600160a01b039384166001600160a01b031991821617909155600380549290931691811691909117909155600080549091163317905561096e806100d96000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639ece77c81161005b5780639ece77c8146100fd578063b2237ba314610123578063bf975f1414610140578063f2fde38b146101665761007d565b80634e71e0c8146100825780635d1e2d1b1461008c5780636e908ca3146100b8575b600080fd5b61008a61018c565b005b61008a600480360360408110156100a257600080fd5b506001600160a01b038135169060200135610244565b6100e4600480360360408110156100ce57600080fd5b506001600160a01b03813516906020013561044f565b6040805192835260208301919091528051918290030190f35b61008a6004803603602081101561011357600080fd5b50356001600160a01b0316610494565b61008a6004803603602081101561013957600080fd5b503561055d565b61008a6004803603602081101561015657600080fd5b50356001600160a01b03166105fe565b61008a6004803603602081101561017c57600080fd5b50356001600160a01b03166106c7565b6001546001600160a01b031633146101e0576040805162461bcd60e51b815260206004820152601260248201527137b7363c903832b73234b7339037bbb732b960711b604482015290519081900360640190fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000610273670de0b6b3a76400006102676004548561073590919063ffffffff16565b9063ffffffff61079716565b600254604080516323b872dd60e01b81523360048201526001600160a01b039283166024820152604481018490529051929350908516916323b872dd916064808201926020929091908290030181600087803b1580156102d257600080fd5b505af11580156102e6573d6000803e3d6000fd5b505050506040513d60208110156102fc57600080fd5b5051610346576040805162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b604482015290519081900360640190fd5b6003546001600160a01b03808516916323b872dd9133911661036e868663ffffffff6107d916565b6040518463ffffffff1660e01b815260040180846001600160a01b03166001600160a01b03168152602001836001600160a01b03166001600160a01b031681526020018281526020019350505050602060405180830381600087803b1580156103d657600080fd5b505af11580156103ea573d6000803e3d6000fd5b505050506040513d602081101561040057600080fd5b505161044a576040805162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b604482015290519081900360640190fd5b505050565b6000806000610475670de0b6b3a76400006102676004548761073590919063ffffffff16565b905080610488858263ffffffff6107d916565b92509250509250929050565b6000546001600160a01b031633146104e0576040805162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b604482015290519081900360640190fd5b6001600160a01b03811661053b576040805162461bcd60e51b815260206004820152601a60248201527f63616e6e6f742073657420746f207a65726f2061646472657373000000000000604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105a9576040805162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b604482015290519081900360640190fd5b670de0b6b3a764000060045411156105f9576040805162461bcd60e51b815260206004820152600e60248201526d0e4c2e8d2de40e8dede40d0d2ced60931b604482015290519081900360640190fd5b600455565b6000546001600160a01b0316331461064a576040805162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b604482015290519081900360640190fd5b6001600160a01b0381166106a5576040805162461bcd60e51b815260206004820152601a60248201527f63616e6e6f742073657420746f207a65726f2061646472657373000000000000604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610713576040805162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60008261074457506000610791565b8282028284828161075157fe5b041461078e5760405162461bcd60e51b81526004018080602001828103825260218152602001806109186021913960400191505060405180910390fd5b90505b92915050565b600061078e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061081b565b600061078e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506108bd565b600081836108a75760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561086c578181015183820152602001610854565b50505050905090810190601f1680156108995780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816108b357fe5b0495945050505050565b6000818484111561090f5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561086c578181015183820152602001610854565b50505090039056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220782b5fe3d48775ef192d0469ac0d6f81c64e09997a1467dbba7900441faee32e64736f6c634300060a0033";
